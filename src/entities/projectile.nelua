require 'math'

require 'nene.core'
require 'nene.math'

require 'entities.namespace'

local Vec2, Rect = Math.Vec2, Math.Rect
local SPEED <comptime> = 128

local Projectile = @record{
  pos: Vec2,
  dir: Vec2,
  active: boolean,
}

function Projectile.init(pos: Vec2, dir: Vec2): Projectile
  return Projectile{
    active = true,
    =pos,
    =dir,
  }
end

function Projectile:get_hitbox(): Rect
  return Rect.from_vec2(self.pos, {8, 8})
end

function Projectile:update(nene: *Nene)
  if not self.active then return end

  self.pos = self.pos + self.dir * SPEED * nene.delta_time
  if self.pos.x > Confs.window_size.w or self.pos.x < -64 or self.pos.y > Confs.window_size.h or self.pos.y < -64 then
    self.active = false
  end
end

function Projectile:draw(nene: *Nene)
  if not self.active then return end

  nene:render_draw_rect(self:get_hitbox(), false, Color.Palette.green)
end

global Entities.Projectile = Projectile
